<?xml version="1.0" encoding="UTF-8" ?>
<!--
    This is used to map merge patterns in files generated
    by jsf2 cartridge to new patterns. Just add content to the
    CDATA sections of the <to/> elements in order to
    use the following merge points.
-->
<mappings name="WebMerge">
	<mapping>
		<from><![CDATA[<!-- cartridge-template merge-point -->]]></from>
		<to>
			<![CDATA[
	<template
        path="templates/ouvidoria/messages/messages_pt_BR.properties.vsl"
        outputPattern="WEB-INF/classes/${messageResources}_pt_BR.properties"
        outlet="messages"
        overwrite="true"
        outputToSingleFile="true">
        <modelElements>
            <modelElement variable="applicationUseCases">
                <type name="org.andromda.metafacades.uml.FrontEndUseCase">
                    <property name="entryUseCase"/>
                </type>
            </modelElement>
            <modelElement variable="enumerations">
                <type name="org.andromda.cartridges.jsf2.metafacades.JSFEnumeration"/>
            </modelElement>
            <!-- the crud entity messages are also generated in this bundle -->
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.jsf2.metafacades.JSFManageableEntity">
                    <property name="needsUserInterface"/>
                </type>
            </modelElement>
        </modelElements>
    </template>
            ]]>
		</to>
	</mapping>
    <mapping>
        <from><![CDATA[<!-- context-param merge-point -->]]></from>
        <to>
            <![CDATA[
			<resource-ref>
				 <description>ouvidoria Datasource</description>
				 <res-ref-name>jdbc/ouvidoria</res-ref-name>
				 <res-type>javax.sql.DataSource</res-type>
				 <res-auth>Container</res-auth>
				 <res-sharing-scope>Shareable</res-sharing-scope>
			</resource-ref>
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- facelets-libraries merge-point -->]]></from>
        <to>
            <![CDATA[
    <!-- uncomment if you want to add your own project specific facelet tags
         (and of course make sure "/WEB-INF/custom.taglib.xml" is the actual path
          to your facelet tag descriptor)
            /WEB-INF/custom.taglib.xml;
    -->
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- filter merge-point -->]]></from>
        <to>
            <![CDATA[
    <!-- uncomment the following if you're using the open-session-in-view pattern
         note: that you'll need to update the filter-class value if you've changed
         the defaults for the package and/or filter name
    <filter>
        <filter-name>OpenSessionInViewFilter</filter-name>
        <filter-class>org.andromda.spring.presentation.AndroMDAOpenSessionInViewFilter</filter-class>
        <init-param>
            <param-name>singleSession</param-name>
            <param-value>false</param-value>
        </init-param>
    </filter>
    -->
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- filter-mapping merge-point -->]]></from>
        <to>
            <![CDATA[
    <!-- uncomment the following if you're using the open-session-in-view pattern
    <filter-mapping>
        <filter-name>OpenSessionInViewFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    -->
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- listener merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- error-page merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- servlet merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- servlet-mapping merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- welcome-file-list merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- security-constraint merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- security-role merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- global-forwards merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- mime-type merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <!--
        This next mapping will merge the entire messages.properties into the generated
        messages.properties -->
    <mapping>
        <from><![CDATA[# custom-messages merge-point]]></from>
        <to>
            <path>../../../../../web/src/main/props/messages.properties</path>
        </to>
    </mapping>  
    <mapping>
        <from><![CDATA[// com.googlecode.ouvidoria.presentation.complaint.internet.registerInformComplaintDataSubmitFormImpl import merge-point]]></from>
        <to>
            <![CDATA[
import static com.googlecode.ouvidoria.presentation.util.ComboboxUtil.toSelectItemCollection;
import java.util.ArrayList;
import com.googlecode.ouvidoria.ServiceLocator;
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[// com.googlecode.ouvidoria.presentation.complaint.internet.registerInformComplaintDataSubmitFormImpl body merge-point]]></from>
        <to>
            <![CDATA[
            public void onStateSelectionChange() {
		    	Collection<SelectItem> list = new ArrayList<SelectItem>();
		    	if(state != null){
		    		list = toSelectItemCollection(ServiceLocator.instance().getLocalityService().listCities(state));
		    	}
		    	setCityBackingList(list);
		    }
            ]]>
        </to>
    </mapping>
</mappings>