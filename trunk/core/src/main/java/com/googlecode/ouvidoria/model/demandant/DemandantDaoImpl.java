// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on 12/09/2014 20:29:33-0200.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package com.googlecode.ouvidoria.model.demandant;

import com.googlecode.ouvidoria.model.demandant.vo.DemandantVO;

/**
 * @see Demandant
 */
public class DemandantDaoImpl
    extends DemandantDaoBase
{
    /**
     * {@inheritDoc}
     */
    @Override
    public void toDemandantVO(
        Demandant source,
        DemandantVO target)
    {
        // TODO verify behavior of toDemandantVO
        super.toDemandantVO(source, target);
        // WARNING! No conversion for target.identification (can't convert source.getIdentification():com.googlecode.ouvidoria.model.demandant.Identification to java.lang.String
        // WARNING! No conversion for target.city (can't convert source.getCity():com.googlecode.ouvidoria.model.locality.City to java.lang.String
        // WARNING! No conversion for target.type (can't convert source.getType():com.googlecode.ouvidoria.model.demandant.DemandantType to java.lang.String
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DemandantVO toDemandantVO(final Demandant entity)
    {
        // TODO verify behavior of toDemandantVO
        return super.toDemandantVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
        private Demandant loadDemandantFromDemandantVO(DemandantVO vo)
    {
    	        Demandant retorno = null;
		if(vo.getId() == null){
			retorno = Demandant.Factory.newInstance();
		}else{
			retorno = load(vo.getId());
		}
		return retorno;	
		
        // TODO implement loadDemandantFromDemandantVO
        //throw new UnsupportedOperationException("com.googlecode.ouvidoria.model.demandant.loadDemandantFromDemandantVO(DemandantVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (demandantVO.getId() == null)
        {
            return  Demandant.Factory.newInstance();
        }
        else
        {
            return this.load(demandantVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public Demandant demandantVOToEntity(DemandantVO demandantVO)
    {
        // TODO verify behavior of demandantVOToEntity
        Demandant entity = this.loadDemandantFromDemandantVO(demandantVO);
        this.demandantVOToEntity(demandantVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void demandantVOToEntity(
        DemandantVO source,
        Demandant target,
        boolean copyIfNull)
    {
        // TODO verify behavior of demandantVOToEntity
        super.demandantVOToEntity(source, target, copyIfNull);
    }
}