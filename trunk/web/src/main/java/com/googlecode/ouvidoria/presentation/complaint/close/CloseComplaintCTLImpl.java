// license-header java merge-point
// Generated by andromda-jsf cartridge (controllers\ControllerImpl.java.vsl)
package com.googlecode.ouvidoria.presentation.complaint.close;

import com.googlecode.ouvidoria.model.complaint.vo.ComplaintVO;

/**
 * @see com.googlecode.ouvidoria.presentation.complaint.close.CloseComplaintCTL
 */
public class CloseComplaintCTLImpl extends CloseComplaintCTL {
	/**
	 * The serial version UID of this class. Needed for serialization.
	 */
	private static final long serialVersionUID = -469100613836007410L;

	/**
	 * @see com.googlecode.ouvidoria.presentation.complaint.close.CloseComplaintCTL#isParameterPresent()
	 */
	@Override
	public boolean isParameterPresent() {
		System.out.println("getComplaintSessionObject().getComplaintId()="
				+ getComplaintSessionObject().getComplaintId());

		return getComplaintSessionObject().getComplaintId() != null
				&& getComplaintSessionObject().getComplaintId() > 0;
	}

	/**
	 * @see com.googlecode.ouvidoria.presentation.complaint.close.CloseComplaintCTL#retrieveComplaint()
	 */
	@Override
	public void retrieveComplaint(RetrieveComplaintForm form) throws Throwable {
		Long complaintId = getComplaintSessionObject().getComplaintId();
		ComplaintVO vo = getComplaintService().load(complaintId);
		form.setDate(vo.getDate().toString());
		form.setId(vo.getId()+"");
		form.setStatus(vo.getStatus().toString());
		form.setText(vo.getText());
		form.setAnswers(vo.getAnswers());
	}

	/**
	 * @see com.googlecode.ouvidoria.presentation.complaint.close.CloseComplaintCTL#closeComplaint()
	 */
	@Override
	public void closeComplaint() {
		Long complaintId = getComplaintSessionObject().getComplaintId();
		getComplaintService().close(complaintId);
	}

}